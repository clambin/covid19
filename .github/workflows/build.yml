name: Build

on:
  push:
    branches:
    - master
    - develop

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.15
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: test
        run: |
          export pg_host=postgres
          export pg_port=5432
          export pg_database=postgres
          export pg_user=postgres
          export pg_password=postgres
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - uses: codecov/codecov-action@v1
        with:
          file: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Version number
        id: vars
        run: echo ::set-output name=branch::$${GITHUB_REF##*/}
      - name: build
        env:
          RELEASE_VERSION: ${{ steps.vars.output.branch }}
        run: |
          for TARGET in covid19 backfill; do
            for ARCH in amd64 arm; do
              GOOS=linux GOARCH=$ARCH \
                go build \
                  -ldflags "-X github.com/clambin/covid19/internal/version.BuildVersion=$RELEASE_VERSION" \
                  -o bld/$TARGET-linux-$ARCH \
                  cmd/$TARGET/$TARGET.go
            done
          done
      - uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: ./bld/*
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: binaries
          path: ./bld
      - run: |
          chmod +x ./bld/*
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: docker metadata
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: clambin/covid19
          tag-sha: True
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}.{{patch}}
      - name: docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/Dockerfile
          platforms: linux/amd64,linux/arm
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}