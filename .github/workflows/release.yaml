name: Release

on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.17
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: test
        run: |
          export pg_host=postgres
          export pg_port=5432
          export pg_database=postgres
          export pg_user=postgres
          export pg_password=postgres
          export SHOUTRRR_SLACK_URL=${{ secrets.SHOUTRRR_SLACK_URL }}
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - uses: codecov/codecov-action@v2.1.0
        with:
          file: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: lint
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...
  vet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: vet
        run: go vet ./...
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ covid19-handler, covid19-loader, covid19-population-loader ]
        goarch: [ amd64, arm, arm64 ]
    steps:
      - uses: clambin/workflows/.github/actions/go/build@main
        with:
          go-version: 1.17
          target: ${{ matrix.target }}
          goos: linux
          goarch: ${{ matrix.goarch }}
  docker:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ covid19-handler, covid19-loader, covid19-population-loader ]
    steps:
      - uses: clambin/workflows/.github/actions/docker@main
        with:
          target: ${{ matrix.target }}
          repo: clambin
          dockerfile: build/Dockerfile-${{ matrix.target }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  publish:
    runs-on: ubuntu-latest
    needs:
      - docker
    steps:
      - uses: clambin/workflows/.github/actions/go/publish@main
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
