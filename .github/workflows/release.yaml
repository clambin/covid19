name: Release

on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.17
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: test
        run: |
          export pg_host=postgres
          export pg_port=5432
          export pg_database=postgres
          export pg_user=postgres
          export pg_password=postgres
          export SHOUTRRR_SLACK_URL=${{ secrets.SHOUTRRR_SLACK_URL }}
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - uses: codecov/codecov-action@v2.1.0
        with:
          file: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
  build-handler:
    needs: test
    uses: clambin/workflows/.github/workflows/build.yaml@main
    with:
      go-version: 1.17
      target: covid19-handler
      dockerfile: build/Dockerfile-covid19-handler
  build-loader:
    needs: test
    uses: clambin/workflows/.github/workflows/build.yaml@main
    with:
      go-version: 1.17
      target: covid19-loader
      dockerfile: build/Dockerfile-covid19-loader
  build-population-loader:
    needs: test
    uses: clambin/workflows/.github/workflows/build.yaml@main
    with:
      go-version: 1.17
      target: covid19-population-loader
      dockerfile: build/Dockerfile-covid19-population-loader
  publish:
    needs:
      - build-handler
      - build-loader
      - build-population-loader
    uses: clambin/workflows/.github/workflows/publish.yaml@main