name: Release

on:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.16
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: test
        run: |
          export pg_host=postgres
          export pg_port=5432
          export pg_database=postgres
          export pg_user=postgres
          export pg_password=postgres
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - uses: codecov/codecov-action@v1
        with:
          file: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ covid19, backfill ]
        platform: [ linux ]
        arch: [ amd64, arm, arm64 ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Version number
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF##*/}
      - name: build
        env:
          TARGET: ${{ matrix.target }}
          PLATFORM: ${{ matrix.platform }}
          ARCH: ${{ matrix.arch }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          GOOS=$PLATFORM GOARCH=$ARCH \
            go build \
              -ldflags "-X github.com/clambin/covid19/internal/version.BuildVersion=$RELEASE_VERSION" \
              -o bld/$TARGET-$PLATFORM-$ARCH \
              cmd/$TARGET/$TARGET.go
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}-${{ matrix.platform }}-${{ matrix.arch }}
          path: ./bld/*
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: covid19-linux-arm
          path: ./bld
      - uses: actions/download-artifact@v2
        with:
          name: covid19-linux-arm64
          path: ./bld
      - uses: actions/download-artifact@v2
        with:
          name: covid19-linux-amd64
          path: ./bld
      - name: Fix permissions
        run: chmod +x bld/*
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1.3.0
      - uses: docker/login-action@v1.9.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: docker metadata
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3.1.0
        with:
          images: clambin/covid19
          tags: |
            type=sha
            type=semver,pattern={{version}}
      - name: docker image
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          file: ./build/Dockerfile
          platforms: linux/amd64,linux/arm,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: ./artifacts
      - name: Move binaries into place
        run: |
          mkdir bld
          mv artifacts/*/* bld
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bld/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v2.4.2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: clambin/covid19
